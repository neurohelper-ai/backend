datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  description String?
  coverUrl  String    @default("https://api-dev-minimal-v610.pages.dev/assets/images/cover/cover-2.webp")
  scenario  Scenario[]
  parentId  String     @default("")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Scenario {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  prompt     String
  params     Json
  description String?
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @db.ObjectId
}

enum RequestStatus {
  PENDING
  COMPLETED
}

model GptRequest {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  scenarioId String
  params     Json
  status     RequestStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  tokens    Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Plan {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Float
  duration  Int
  tokens    Int
  features  String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
}

model Subscription {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  planId    String
  status    SubscriptionStatus @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


